define networkmanager::ifc::fallback(
  Enum['absent', 'present'] $ensure = present,
  Enum['up', 'down']        $state = 'up',
  String                    $id = $title,
  Hash                      $config = {}, #pozaduje tento hash
  String                    $ethernet_connection_file = '',
) {
  include networkmanager
  Networkmanager::Ifc::Fallback[$title] ~> Class['networkmanager']
  File['/etc/NetworkManager/NetworkManager.conf'] -> Networkmanager::Ifc::Fallback[$title]


  $confilename = "/etc/NetworkManager/system-connections/${id}.nmconnection"
  $uuid = networkmanager::connection_uuid($id)
    
  $needed_params = {
    'connection' => {
      'id'          => $connection,
      'uuid'        => $uuid,
    },
  }

#    $non_uuid_parents = keys($params).filter |$p|{
#      'parent' in keys($params[$p]) and $params[$p]['parent'] !~ /^\h{8}(-\h{4}){3}-\h{12}$/
#    }.reduce({}) |$nup, $px| {
#      $nup + {$px => {'parent' => networkmanager::connection_uuid($params[$px]['parent'])}}
#    }
#
#    $non_uuid_masters = keys($params).filter |$m|{
#      'master' in keys($params[$m]) and $params[$m]['master'] !~ /^\h{8}(-\h{4}){3}-\h{12}$/
#    }.reduce({}) |$num, $mx| {
#      $num + {$mx => {'master' => networkmanager::connection_uuid($params[$mx]['master'])}}
#    }

  $params_e = deep_merge($needed_params, $config)

  $keyfile_settings = {
    'path'              => $confilename,
    'quote_char'        => '',
    'key_val_separator' => '=',
    'require'           => File[$confilename]
  }

  file {
    $confilename:
      ensure  => $ensure_file,
      owner   => 'root',
      group   => 'root',
      replace => true,
      backup  => false,
      mode    => '0600',
      content => hash2ini($params_e,$keyfile_settings);
  }

  if $ensure == present {
     networkmanager::activate_connection($connection, $state)
  }

  #zde můžu vložit soubory jako už hotová spojení (soubory, kter0 se jenom vloží do adresáře /etc/NetworkManager/system-connections/)
  if $ethernet_connection_file {
    file {
      "/etc/NetworkManager/system-connections/${ethernet_connection_file}":
        ensure  => 'file',
        owner   => 'root',
        group   => 'root',
        replace => false,
        backup  => false,
        mode    => '0600',
        source  => "puppet:///modules/fzu/NM/keyfiles/${eth_file_name}";
    }
  
    networkmanager::activate_connection($eth_file_name, $state)
  }
  include networkmanager::reload
  Networkmanager::Ifc::Fallback[$title] ~> Class['networkmanager::reload']
}

